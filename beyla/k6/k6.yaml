kind: Secret
apiVersion: v1
metadata:
  labels:
    app: k6
  name: k6-config
type: Opaque
stringData: 
  script.js: |
    import http from 'k6/http';
    import { check, sleep } from 'k6';

    // Define the base URL of your API
    const BASE_URL = __ENV.BASE_URL || 'http://nginx:3333';

    // Define the options for your test
    export let options = {
        stages: [
            { duration: '30s', target: 20 }, // Ramp up to 50 virtual users over 1 minute
            { duration: '4m', target: 50 }, // Stay at 50 virtual users for 3 minutes
            { duration: '30s', target: 0 }   // Ramp down to 0 virtual users over 1 minute
        ],
    };

    // Define the main function that represents your test scenario
    export default function () {
        let response;

        response = http.get(`${BASE_URL}/greeting`);

        check(response, {
            'Status 200': (r) => r.status === 200,
        });

        sleep(1);

        response = http.get(`${BASE_URL}/smoke`);

        check(response, {
            'Status 200': (r) => r.status === 200,
        });

        sleep(1);

        response = http.get(`${BASE_URL}/ping?delay=300ms`);

        check(response, {
            'Status 200': (r) => r.status === 200,
        });

        sleep(1);

    }
---
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app: k6
  name: k6-job
spec:
  schedule: "*/7 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: k6
            image: "grafana/k6:0.50.0"
            args: ["run", "/scripts/script.js"]
            imagePullPolicy: IfNotPresent
            env:
              - name: BASE_URL
                value: http://nginx:3333
            volumeMounts:
            - name: k6-config
              mountPath: /scripts/
          restartPolicy: OnFailure
          volumes:
            - name: k6-config
              secret:
                secretName: k6-config