---

# Deployment descriptor
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: "notification-dispatcher"
    app.kubernetes.io/component: "api"
    app.kubernetes.io/part-of: "business-platform"
    app.kubernetes.io/instance: "prod"
    app.kubernetes.io/version: "3.2.0"
  name: "notification-dispatcher"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "notification-dispatcher"
      app.kubernetes.io/component: "api"
      app.kubernetes.io/part-of: "business-platform"
      app.kubernetes.io/instance: "prod"
      app.kubernetes.io/version: "3.2.0"
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path:  "/actuator/prometheus"
        profiles.grafana.com/java.enabled: "true"
        resource.opentelemetry.io/service.name: "notification-dispatcher"
      labels:
        app.kubernetes.io/name: "notification-dispatcher"
        app.kubernetes.io/component: "api"
        app.kubernetes.io/part-of: "business-platform"
        app.kubernetes.io/instance: "prod"
        app.kubernetes.io/version: "3.2.0"
    spec:
      containers:
      - name: notification-dispatcher
        image: "alainpham/notification-dispatcher:3.2.0"
        imagePullPolicy: "Always"
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: APPLICATION_NAME
            value: notification-dispatcher
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: "http://grafana-k8s-monitoring-alloy-receiver.default.svc.cluster.local:4318"
          - name: OTEL_JAVAAGENT_ENABLED
            value: "false"
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: "service.name=notification-dispatcher,service.namespace=$(POD_NAMESPACE),service.instance.id=$(POD_NAME),service.version=3.2.0"
        livenessProbe:
          httpGet:
            path: "/actuator/health"
            port: 8081
            scheme: "HTTP"
          initialDelaySeconds: 0
          successThreshold: 1
          periodSeconds: 10
          failureThreshold: 40 
        readinessProbe:
          httpGet:
            path: "/actuator/health"
            port: 8081
            scheme: "HTTP"
          initialDelaySeconds: 0
          successThreshold: 1
          periodSeconds: 10
          failureThreshold: 40 
        resources:
          # limits:
          #   cpu: "1.0"
          #   memory: "1024Mi"
          # requests:
          #   cpu: "0.2"
          #   memory: "128Mi"
        ports:
          - containerPort: 8080
          - containerPort: 8081

---
apiVersion: "v1"
kind: "Service"
metadata:
  labels:
    app.kubernetes.io/name: "notification-dispatcher"
    app.kubernetes.io/component: "api"
    app.kubernetes.io/part-of: "business-platform"
    app.kubernetes.io/instance: "prod"
    app.kubernetes.io/version: "3.2.0"
  name: "notification-dispatcher"
spec:
  type: ClusterIP
  ports:
  - name: "http"
    port: 8080
    protocol: "TCP"
    targetPort: 8080
  selector:
    app.kubernetes.io/name: "notification-dispatcher"
    app.kubernetes.io/component: "api"
    app.kubernetes.io/part-of: "business-platform"
    app.kubernetes.io/instance: "prod"
    app.kubernetes.io/version: "3.2.0"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: notification-dispatcher
  labels:
    app.kubernetes.io/name: "notification-dispatcher"
    app.kubernetes.io/component: "api"
    app.kubernetes.io/part-of: "business-platform"
    app.kubernetes.io/instance: "prod"
    app.kubernetes.io/version: "3.2.0"
  annotations:
    nginx.ingress.kubernetes.io/ssl-passthrough: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: notification-dispatcher.codersandbox.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: notification-dispatcher
            port:
              number: 8080
---
